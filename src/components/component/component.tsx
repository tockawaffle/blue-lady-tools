/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/ICkDBWWevfh
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState, useEffect } from "react"
import { Progress } from "@/components/ui/progress"
import Link from "next/link"

export function Component() {
  const [currentStep, setCurrentStep] = useState(1)
  const [isLoading, setIsLoading] = useState(true)
  useEffect(() => {
    const timer = setInterval(() => {
      if (currentStep < 3) {
        setCurrentStep(currentStep + 1)
      } else {
        setIsLoading(false)
        clearInterval(timer)
      }
    }, 1000)
    return () => clearInterval(timer)
  }, [currentStep])
  return (
    <div className="flex flex-col items-center justify-center h-screen bg-background">
      <div className="flex flex-col items-center gap-6 animate-fade-in">
        <MountainIcon className="w-16 h-16 text-primary animate-bounce" />
        <div className="text-2xl font-bold text-primary-foreground animate-fade-in-up">Acme App</div>
        <div className="grid w-full max-w-xs gap-4 animate-fade-in-up">
          <div className="flex items-center justify-between">
            <div
              className={`text-sm font-medium ${
                currentStep >= 1 ? "text-primary-foreground" : "text-muted-foreground"
              }`}
            >
              Initializing
            </div>
            <div
              className={`text-sm font-medium ${
                currentStep >= 1 ? "text-primary-foreground" : "text-muted-foreground"
              }`}
            >
              {currentStep >= 1 ? "\u2713" : ""}
            </div>
          </div>
          <div className="flex items-center justify-between">
            <div
              className={`text-sm font-medium ${
                currentStep >= 2 ? "text-primary-foreground" : "text-muted-foreground"
              }`}
            >
              Connecting
            </div>
            <div
              className={`text-sm font-medium ${
                currentStep >= 2 ? "text-primary-foreground" : "text-muted-foreground"
              }`}
            >
              {currentStep >= 2 ? "\u2713" : ""}
            </div>
          </div>
          <div className="flex items-center justify-between">
            <div
              className={`text-sm font-medium ${
                currentStep >= 3 ? "text-primary-foreground" : "text-muted-foreground"
              }`}
            >
              Loading
            </div>
            <div
              className={`text-sm font-medium ${
                currentStep >= 3 ? "text-primary-foreground" : "text-muted-foreground"
              }`}
            >
              {currentStep >= 3 ? "\u2713" : ""}
            </div>
          </div>
        </div>
        {isLoading ? (
          <Progress value={(currentStep / 3) * 100} className="w-full max-w-xs animate-fade-in-up" />
        ) : (
          <Link
            href="#"
            className="inline-flex h-10 items-center justify-center rounded-md bg-primary px-8 text-sm font-medium text-primary-foreground shadow transition-colors hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 animate-fade-in-up"
            prefetch={false}
          >
            Enter App
          </Link>
        )}
      </div>
    </div>
  )
}

function MountainIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  )
}


function XIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  )
}
